<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="sqlite3ext.h"><comment type="block">/*
** 2006 June 7
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
** This header file defines the SQLite interface for use by
** shared libraries that want to be imported as extensions into
** an SQLite instance.  Shared libraries that intend to be loaded
** as extensions by SQLite should #include this file instead of 
** sqlite3.h.
**
** @(#) $Id: sqlite3ext.h,v 1.25 2008/10/12 00:27:54 shane Exp $
*/</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_SQLITE3EXT_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>_SQLITE3EXT_H_</name></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqlite3.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>sqlite3_api_routines</name> sqlite3_api_routines;</struct></type></typedef>

<comment type="block">/*
** The following structure holds pointers to all of the SQLite API
** routines.
**
** WARNING:  In order to maintain backwards compatibility, add new
** interfaces to the end of this structure only.  If you insert new
** interfaces in the middle of this structure, then older different
** versions of SQLite will not be able to load each others' shared
** libraries!
*/</comment>
<struct>struct <name>sqlite3_api_routines</name> <block>{
  <function_decl><type><name>void</name> *</type> (*<name>aggregate_context</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>nBytes</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>aggregate_count</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_blob</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>n</name></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_double</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>double</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_int</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_int64</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite_int64</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_null</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_parameter_count</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_parameter_index</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type><name>zName</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>bind_parameter_name</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_text</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>n</name></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_text16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>bind_value</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>busy_handler</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>busy_timeout</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>ms</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>changes</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>close</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>collation_needed</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>eTextRep</name></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>collation_needed16</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>eTextRep</name></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_blob</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>column_bytes</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>column_bytes16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>column_count</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type><name>pStmt</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>column_database_name</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_database_name16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>column_decltype</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>i</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_decltype16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>double</name></type>  (*<name>column_double</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>column_int</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite_int64</name></type>  (*<name>column_int64</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>column_name</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_name16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>column_origin_name</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_origin_name16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>column_table_name</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_table_name16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>unsigned</name> <name>char</name> *</type> (*<name>column_text</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>column_text16</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>column_type</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_value</name>*</type> (*<name>column_value</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type> <name>iCol</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>commit_hook</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>complete</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type><name>sql</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>complete16</name>)<parameter_list>(<param><decl><type><name>const</name> <name>void</name>*</type><name>sql</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>create_collation</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>create_collation16</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>create_function</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type> (*<name>xFunc</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_value</name>**</type></decl></param>)</parameter_list>,<param><function_decl><type><name>void</name></type> (*<name>xStep</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_value</name>**</type></decl></param>)</parameter_list>,<param><function_decl><type><name>void</name></type> (*<name>xFinal</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list></function_decl></param></function_decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>create_function16</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type> (*<name>xFunc</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_value</name>**</type></decl></param>)</parameter_list>,<param><function_decl><type><name>void</name></type> (*<name>xStep</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_value</name>**</type></decl></param>)</parameter_list>,<param><function_decl><type><name>void</name></type> (*<name>xFinal</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list></function_decl></param></function_decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>create_module</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>sqlite3_module</name>*</type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>data_count</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type><name>pStmt</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3</name> *</type> (*<name>db_handle</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>declare_vtab</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>enable_shared_cache</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>errcode</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type><name>db</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>errmsg</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>errmsg16</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>exec</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>sqlite3_callback</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>char</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>expired</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>finalize</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type><name>pStmt</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>free</name>)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>free_table</name>)<parameter_list>(<param><decl><type><name>char</name>**</type><name>result</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>get_autocommit</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>get_auxdata</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>get_table</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>char</name>***</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>char</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>global_recover</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>interruptx</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite_int64</name></type>  (*<name>last_insert_rowid</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type> (*<name>libversion</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>libversion_number</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type>(*<name>malloc</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>char</name> *</type> (*<name>mprintf</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type>...</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>open</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>sqlite3</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>open16</name>)<parameter_list>(<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>sqlite3</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>prepare</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>**</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>prepare16</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>**</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>profile</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>sqlite_uint64</name></type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>progress_handler</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type>(*<name>realloc</name>)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>reset</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type><name>pStmt</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_blob</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_double</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>double</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_error</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_error16</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_int</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_int64</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>sqlite_int64</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_null</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_text</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_text16</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_text16be</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_text16le</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>result_value</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>rollback_hook</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>set_authorizer</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>set_auxdata</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type> (*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>char</name> *</type> (*<name>snprintf</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type>...</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>step</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>table_column_metadata</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>char</name> <name>const</name>**</type></decl></param>,<param><decl><type><name>char</name> <name>const</name>**</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type>  (*<name>thread_cleanup</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>total_changes</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>trace</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*<name>xTrace</name>)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>transfer_bindings</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>update_hook</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param> ,<param><decl><type><name>char</name> <name>const</name>*</type></decl></param>,<param><decl><type><name>char</name> <name>const</name>*</type></decl></param>,<param><decl><type><name>sqlite_int64</name></type></decl></param>)</parameter_list>,<param><decl><type><name>void</name>*</type></decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name> *</type> (*<name>user_data</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>value_blob</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>value_bytes</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>value_bytes16</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>double</name></type>  (*<name>value_double</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>value_int</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite_int64</name></type>  (*<name>value_int64</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>value_numeric_type</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>unsigned</name> <name>char</name> *</type> (*<name>value_text</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>value_text16</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>value_text16be</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>void</name> *</type> (*<name>value_text16le</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type>  (*<name>value_type</name>)<parameter_list>(<param><decl><type><name>sqlite3_value</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>char</name> *</type>(*<name>vmprintf</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>va_list</name></type></decl></param>)</parameter_list>;</function_decl>
  <comment type="block">/* Added ??? */</comment>
  <function_decl><type><name>int</name></type> (*<name>overload_function</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>, <param><decl><type><name>const</name> <name>char</name> *</type><name>zFuncName</name></decl></param>, <param><decl><type><name>int</name></type> <name>nArg</name></decl></param>)</parameter_list>;</function_decl>
  <comment type="block">/* Added by 3.3.13 */</comment>
  <function_decl><type><name>int</name></type> (*<name>prepare_v2</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>**</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>prepare16_v2</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>**</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>clear_bindings</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <comment type="block">/* Added by 3.4.1 */</comment>
  <function_decl><type><name>int</name></type> (*<name>create_module_v2</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>sqlite3_module</name>*</type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>void</name></type> (*<name>xDestroy</name>)<parameter_list>(<param><decl><type><name>void</name> *</type></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>
  <comment type="block">/* Added by 3.5.0 */</comment>
  <function_decl><type><name>int</name></type> (*<name>bind_zeroblob</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>blob_bytes</name>)<parameter_list>(<param><decl><type><name>sqlite3_blob</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>blob_close</name>)<parameter_list>(<param><decl><type><name>sqlite3_blob</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>blob_open</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>sqlite3_int64</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>sqlite3_blob</name>**</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>blob_read</name>)<parameter_list>(<param><decl><type><name>sqlite3_blob</name>*</type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>blob_write</name>)<parameter_list>(<param><decl><type><name>sqlite3_blob</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>create_collation_v2</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>,<param><function_decl><type><name>int</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>void</name>*</type></decl></param>)</parameter_list>,<param><function_decl><type><name>void</name></type>(*)<parameter_list>(<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list></function_decl></param></function_decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>file_control</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_int64</name></type> (*<name>memory_highwater</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_int64</name></type> (*<name>memory_used</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_mutex</name> *</type>(*<name>mutex_alloc</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>mutex_enter</name>)<parameter_list>(<param><decl><type><name>sqlite3_mutex</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>mutex_free</name>)<parameter_list>(<param><decl><type><name>sqlite3_mutex</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>mutex_leave</name>)<parameter_list>(<param><decl><type><name>sqlite3_mutex</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>mutex_try</name>)<parameter_list>(<param><decl><type><name>sqlite3_mutex</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>open_v2</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>,<param><decl><type><name>sqlite3</name>**</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>release_memory</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>result_error_nomem</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>result_error_toobig</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>sleep</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>soft_heap_limit</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_vfs</name> *</type>(*<name>vfs_find</name>)<parameter_list>(<param><decl><type><name>const</name> <name>char</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>vfs_register</name>)<parameter_list>(<param><decl><type><name>sqlite3_vfs</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>vfs_unregister</name>)<parameter_list>(<param><decl><type><name>sqlite3_vfs</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>xthreadsafe</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>result_zeroblob</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>result_error_code</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>test_control</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>, <param><decl><type>...</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> (*<name>randomness</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>void</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3</name> *</type>(*<name>context_db_handle</name>)<parameter_list>(<param><decl><type><name>sqlite3_context</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>extended_result_codes</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>limit</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>sqlite3_stmt</name> *</type>(*<name>next_stmt</name>)<parameter_list>(<param><decl><type><name>sqlite3</name>*</type></decl></param>,<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>const</name> <name>char</name> *</type>(*<name>sql</name>)<parameter_list>(<param><decl><type><name>sqlite3_stmt</name>*</type></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> (*<name>status</name>)<parameter_list>(<param><decl><type><name>int</name></type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>int</name>*</type></decl></param>,<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
}</block>;</struct>

<comment type="block">/*
** The following macros redefine the API routines so that they are
** redirected throught the global sqlite3_api structure.
**
** This header file is also used by the loadext.c source file
** (part of the main SQLite library - not an extension) so that
** it can get access to the sqlite3_api_routines structure
** definition.  But the main library does not want to redefine
** the API.  So the redefinition macros are only valid if the
** SQLITE_CORE macros is undefined.
*/</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_CORE</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_aggregate_context</name>      <name>sqlite3_api</name>-&gt;aggregate_context</cpp:define>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_DEPRECATED</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_aggregate_count</name>        <name>sqlite3_api</name>-&gt;aggregate_count</cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_blob</name>              <name>sqlite3_api</name>-&gt;bind_blob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_double</name>            <name>sqlite3_api</name>-&gt;bind_double</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_int</name>               <name>sqlite3_api</name>-&gt;bind_int</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_int64</name>             <name>sqlite3_api</name>-&gt;bind_int64</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_null</name>              <name>sqlite3_api</name>-&gt;bind_null</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_parameter_count</name>   <name>sqlite3_api</name>-&gt;bind_parameter_count</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_parameter_index</name>   <name>sqlite3_api</name>-&gt;bind_parameter_index</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_parameter_name</name>    <name>sqlite3_api</name>-&gt;bind_parameter_name</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_text</name>              <name>sqlite3_api</name>-&gt;bind_text</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_text16</name>            <name>sqlite3_api</name>-&gt;bind_text16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_value</name>             <name>sqlite3_api</name>-&gt;bind_value</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_busy_handler</name>           <name>sqlite3_api</name>-&gt;busy_handler</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_busy_timeout</name>           <name>sqlite3_api</name>-&gt;busy_timeout</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_changes</name>                <name>sqlite3_api</name>-&gt;changes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_close</name>                  <name>sqlite3_api</name>-&gt;close</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_collation_needed</name>       <name>sqlite3_api</name>-&gt;collation_needed</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_collation_needed16</name>     <name>sqlite3_api</name>-&gt;collation_needed16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_blob</name>            <name>sqlite3_api</name>-&gt;column_blob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_bytes</name>           <name>sqlite3_api</name>-&gt;column_bytes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_bytes16</name>         <name>sqlite3_api</name>-&gt;column_bytes16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_count</name>           <name>sqlite3_api</name>-&gt;column_count</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_database_name</name>   <name>sqlite3_api</name>-&gt;column_database_name</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_database_name16</name> <name>sqlite3_api</name>-&gt;column_database_name16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_decltype</name>        <name>sqlite3_api</name>-&gt;column_decltype</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_decltype16</name>      <name>sqlite3_api</name>-&gt;column_decltype16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_double</name>          <name>sqlite3_api</name>-&gt;column_double</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_int</name>             <name>sqlite3_api</name>-&gt;column_int</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_int64</name>           <name>sqlite3_api</name>-&gt;column_int64</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_name</name>            <name>sqlite3_api</name>-&gt;column_name</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_name16</name>          <name>sqlite3_api</name>-&gt;column_name16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_origin_name</name>     <name>sqlite3_api</name>-&gt;column_origin_name</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_origin_name16</name>   <name>sqlite3_api</name>-&gt;column_origin_name16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_table_name</name>      <name>sqlite3_api</name>-&gt;column_table_name</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_table_name16</name>    <name>sqlite3_api</name>-&gt;column_table_name16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_text</name>            <name>sqlite3_api</name>-&gt;column_text</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_text16</name>          <name>sqlite3_api</name>-&gt;column_text16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_type</name>            <name>sqlite3_api</name>-&gt;column_type</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_column_value</name>           <name>sqlite3_api</name>-&gt;column_value</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_commit_hook</name>            <name>sqlite3_api</name>-&gt;commit_hook</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_complete</name>               <name>sqlite3_api</name>-&gt;complete</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_complete16</name>             <name>sqlite3_api</name>-&gt;complete16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_collation</name>       <name>sqlite3_api</name>-&gt;create_collation</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_collation16</name>     <name>sqlite3_api</name>-&gt;create_collation16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_function</name>        <name>sqlite3_api</name>-&gt;create_function</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_function16</name>      <name>sqlite3_api</name>-&gt;create_function16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_module</name>          <name>sqlite3_api</name>-&gt;create_module</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_module_v2</name>       <name>sqlite3_api</name>-&gt;create_module_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_data_count</name>             <name>sqlite3_api</name>-&gt;data_count</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_db_handle</name>              <name>sqlite3_api</name>-&gt;db_handle</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_declare_vtab</name>           <name>sqlite3_api</name>-&gt;declare_vtab</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_enable_shared_cache</name>    <name>sqlite3_api</name>-&gt;enable_shared_cache</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_errcode</name>                <name>sqlite3_api</name>-&gt;errcode</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_errmsg</name>                 <name>sqlite3_api</name>-&gt;errmsg</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_errmsg16</name>               <name>sqlite3_api</name>-&gt;errmsg16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_exec</name>                   <name>sqlite3_api</name>-&gt;exec</cpp:define>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_DEPRECATED</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_expired</name>                <name>sqlite3_api</name>-&gt;expired</cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_finalize</name>               <name>sqlite3_api</name>-&gt;finalize</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_free</name>                   <name>sqlite3_api</name>-&gt;free</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_free_table</name>             <name>sqlite3_api</name>-&gt;free_table</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_get_autocommit</name>         <name>sqlite3_api</name>-&gt;get_autocommit</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_get_auxdata</name>            <name>sqlite3_api</name>-&gt;get_auxdata</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_get_table</name>              <name>sqlite3_api</name>-&gt;get_table</cpp:define>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_DEPRECATED</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_global_recover</name>         <name>sqlite3_api</name>-&gt;global_recover</cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_interrupt</name>              <name>sqlite3_api</name>-&gt;interruptx</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_last_insert_rowid</name>      <name>sqlite3_api</name>-&gt;last_insert_rowid</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_libversion</name>             <name>sqlite3_api</name>-&gt;libversion</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_libversion_number</name>      <name>sqlite3_api</name>-&gt;libversion_number</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_malloc</name>                 <name>sqlite3_api</name>-&gt;malloc</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mprintf</name>                <name>sqlite3_api</name>-&gt;mprintf</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_open</name>                   <name>sqlite3_api</name>-&gt;open</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_open16</name>                 <name>sqlite3_api</name>-&gt;open16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare</name>                <name>sqlite3_api</name>-&gt;prepare</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare16</name>              <name>sqlite3_api</name>-&gt;prepare16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare_v2</name>             <name>sqlite3_api</name>-&gt;prepare_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare16_v2</name>           <name>sqlite3_api</name>-&gt;prepare16_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_profile</name>                <name>sqlite3_api</name>-&gt;profile</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_progress_handler</name>       <name>sqlite3_api</name>-&gt;progress_handler</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_realloc</name>                <name>sqlite3_api</name>-&gt;realloc</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_reset</name>                  <name>sqlite3_api</name>-&gt;reset</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_blob</name>            <name>sqlite3_api</name>-&gt;result_blob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_double</name>          <name>sqlite3_api</name>-&gt;result_double</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_error</name>           <name>sqlite3_api</name>-&gt;result_error</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_error16</name>         <name>sqlite3_api</name>-&gt;result_error16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_int</name>             <name>sqlite3_api</name>-&gt;result_int</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_int64</name>           <name>sqlite3_api</name>-&gt;result_int64</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_null</name>            <name>sqlite3_api</name>-&gt;result_null</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_text</name>            <name>sqlite3_api</name>-&gt;result_text</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_text16</name>          <name>sqlite3_api</name>-&gt;result_text16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_text16be</name>        <name>sqlite3_api</name>-&gt;result_text16be</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_text16le</name>        <name>sqlite3_api</name>-&gt;result_text16le</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_value</name>           <name>sqlite3_api</name>-&gt;result_value</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_rollback_hook</name>          <name>sqlite3_api</name>-&gt;rollback_hook</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_set_authorizer</name>         <name>sqlite3_api</name>-&gt;set_authorizer</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_set_auxdata</name>            <name>sqlite3_api</name>-&gt;set_auxdata</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_snprintf</name>               <name>sqlite3_api</name>-&gt;snprintf</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_step</name>                   <name>sqlite3_api</name>-&gt;step</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_table_column_metadata</name>  <name>sqlite3_api</name>-&gt;table_column_metadata</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_thread_cleanup</name>         <name>sqlite3_api</name>-&gt;thread_cleanup</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_total_changes</name>          <name>sqlite3_api</name>-&gt;total_changes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_trace</name>                  <name>sqlite3_api</name>-&gt;trace</cpp:define>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_DEPRECATED</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_transfer_bindings</name>      <name>sqlite3_api</name>-&gt;transfer_bindings</cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_update_hook</name>            <name>sqlite3_api</name>-&gt;update_hook</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_user_data</name>              <name>sqlite3_api</name>-&gt;user_data</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_blob</name>             <name>sqlite3_api</name>-&gt;value_blob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_bytes</name>            <name>sqlite3_api</name>-&gt;value_bytes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_bytes16</name>          <name>sqlite3_api</name>-&gt;value_bytes16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_double</name>           <name>sqlite3_api</name>-&gt;value_double</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_int</name>              <name>sqlite3_api</name>-&gt;value_int</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_int64</name>            <name>sqlite3_api</name>-&gt;value_int64</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_numeric_type</name>     <name>sqlite3_api</name>-&gt;value_numeric_type</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_text</name>             <name>sqlite3_api</name>-&gt;value_text</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_text16</name>           <name>sqlite3_api</name>-&gt;value_text16</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_text16be</name>         <name>sqlite3_api</name>-&gt;value_text16be</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_text16le</name>         <name>sqlite3_api</name>-&gt;value_text16le</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_value_type</name>             <name>sqlite3_api</name>-&gt;value_type</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_vmprintf</name>               <name>sqlite3_api</name>-&gt;vmprintf</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_overload_function</name>      <name>sqlite3_api</name>-&gt;overload_function</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare_v2</name>             <name>sqlite3_api</name>-&gt;prepare_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_prepare16_v2</name>           <name>sqlite3_api</name>-&gt;prepare16_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_clear_bindings</name>         <name>sqlite3_api</name>-&gt;clear_bindings</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_bind_zeroblob</name>          <name>sqlite3_api</name>-&gt;bind_zeroblob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_blob_bytes</name>             <name>sqlite3_api</name>-&gt;blob_bytes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_blob_close</name>             <name>sqlite3_api</name>-&gt;blob_close</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_blob_open</name>              <name>sqlite3_api</name>-&gt;blob_open</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_blob_read</name>              <name>sqlite3_api</name>-&gt;blob_read</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_blob_write</name>             <name>sqlite3_api</name>-&gt;blob_write</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_create_collation_v2</name>    <name>sqlite3_api</name>-&gt;create_collation_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_file_control</name>           <name>sqlite3_api</name>-&gt;file_control</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_memory_highwater</name>       <name>sqlite3_api</name>-&gt;memory_highwater</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_memory_used</name>            <name>sqlite3_api</name>-&gt;memory_used</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mutex_alloc</name>            <name>sqlite3_api</name>-&gt;mutex_alloc</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mutex_enter</name>            <name>sqlite3_api</name>-&gt;mutex_enter</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mutex_free</name>             <name>sqlite3_api</name>-&gt;mutex_free</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mutex_leave</name>            <name>sqlite3_api</name>-&gt;mutex_leave</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_mutex_try</name>              <name>sqlite3_api</name>-&gt;mutex_try</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_open_v2</name>                <name>sqlite3_api</name>-&gt;open_v2</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_release_memory</name>         <name>sqlite3_api</name>-&gt;release_memory</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_error_nomem</name>     <name>sqlite3_api</name>-&gt;result_error_nomem</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_error_toobig</name>    <name>sqlite3_api</name>-&gt;result_error_toobig</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_sleep</name>                  <name>sqlite3_api</name>-&gt;sleep</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_soft_heap_limit</name>        <name>sqlite3_api</name>-&gt;soft_heap_limit</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_vfs_find</name>               <name>sqlite3_api</name>-&gt;vfs_find</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_vfs_register</name>           <name>sqlite3_api</name>-&gt;vfs_register</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_vfs_unregister</name>         <name>sqlite3_api</name>-&gt;vfs_unregister</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_threadsafe</name>             <name>sqlite3_api</name>-&gt;xthreadsafe</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_zeroblob</name>        <name>sqlite3_api</name>-&gt;result_zeroblob</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_result_error_code</name>      <name>sqlite3_api</name>-&gt;result_error_code</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_test_control</name>           <name>sqlite3_api</name>-&gt;test_control</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_randomness</name>             <name>sqlite3_api</name>-&gt;randomness</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_context_db_handle</name>      <name>sqlite3_api</name>-&gt;context_db_handle</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_extended_result_codes</name>  <name>sqlite3_api</name>-&gt;extended_result_codes</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_limit</name>                  <name>sqlite3_api</name>-&gt;limit</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_next_stmt</name>              <name>sqlite3_api</name>-&gt;next_stmt</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_sql</name>                    <name>sqlite3_api</name>-&gt;sql</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>sqlite3_status</name>                 <name>sqlite3_api</name>-&gt;status</cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SQLITE_CORE */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <name>SQLITE_EXTENSION_INIT1</name>     <name>const</name> <name>sqlite3_api_routines</name> *sqlite3_api = 0;</cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>SQLITE_EXTENSION_INIT2</name>(v)  sqlite3_api = v;</cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* _SQLITE3EXT_H_ */</comment>
</unit>
