<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" filename="Class.h" language="C++"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<using>using namespace <name>std</name>;</using>

<class>class <name>Class</name> <block>{<private type="default">
</private><public>public:
	<constructor_decl><name>Class</name><parameter_list>()</parameter_list>;</constructor_decl>
	<destructor_decl><name>~<name>Class</name></name><parameter_list>()</parameter_list>;</destructor_decl>
<function_decl><type><name>void</name></type> <name>print1</name><parameter_list>()</parameter_list>;</function_decl>
	<function_decl><type><name>void</name></type> <name>print2</name><parameter_list>()</parameter_list>;</function_decl>
	<function_decl><type><name>void</name></type> <name>print3</name><parameter_list>()</parameter_list>;</function_decl>


	</public>}</block>;</class>

<function><type><name>void</name></type> <name><name>Class</name>::<name>print1</name></name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>k</name> =<init> <expr>10</expr></init></decl>;</decl_stmt>
	<switch>switch<condition>(<expr><name>k</name></expr>)</condition> <cpp:if>#<cpp:directive>if</cpp:directive> <expr>defined(A)
</expr></cpp:if><switch>switch<condition>(<expr><name>k</name></expr>)</condition> <block>{
	case 1:
		print1();
		break;

	case 2:
		print2();
		break;

	default:
		print3();
		break;
	}
</block></switch><cpp:endif>#<cpp:directive>endif
</cpp:directive></cpp:endif><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!defined(A)
</expr></cpp:if><switch>switch<condition>(<expr><name>k</name></expr>)</condition> <block>{
	case 1:
		print1();
		break;




	default:
		print3();
		break;
	}
</block></switch><cpp:endif>#<cpp:directive>endif
</cpp:directive></cpp:endif></switch>
}</block></function>
</unit>