<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" dir="" filename="OsSpin.h" language="C++">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_config.h"</cpp:file></cpp:include>



<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_int.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OsSpin.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OsSleep.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_PSTAT_GETDYNAMIC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>static</name> <name>int</name> <name>__os_pstat_getdynamic</name></type> <name>__P</name>((<name>void</name>)</decl></decl_stmt>)<empty_stmt>;</empty_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SYSCONF</name></expr></argument>)</argument_list></call> &amp;&amp; <call><name>defined</name><argument_list>(<argument><expr><name>_SC_NPROCESSORS_ONLN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>static</name> <name>u_int32_t</name> <name>__os_sysconf</name></type> <name>__P</name>((<name>void</name>)</decl></decl_stmt>)<empty_stmt>;</empty_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<class>class <name>COsSpin</name>
<block>{<private type="default">
</private><public>public:
<function>	<type><name>void</name></type> <name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction9</name><parameterlist>(<param><decl><type><name>u_int32_t</name>&amp;</type> <name>tas_spins</name></decl></param>)</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function>	<type><name>void</name></type> <name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction11</name><parameterlist>(<param><decl><type><name>u_int32_t</name>&amp;</type> <name>tas_spins</name></decl></param>)</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function><type><name>static</name> <name>u_int32_t</name></type> <name>os_spin</name><parameter_list>(<param><decl><type><name>DB_ENV</name> *</type><name>dbenv</name></decl></param>)</parameter_list>
	<block>{
		<decl_stmt><decl><type><name>u_int32_t</name></type> <name>tas_spins</name></decl>;</decl_stmt>
	
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>dbenv</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
		<expr_stmt><expr><name>tas_spins</name> = 1</expr>;</expr_stmt>
<expr_stmt><expr><call><name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction9</name><argument_list>(<argument><expr><name>tas_spins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction11</name><argument_list>(<argument><expr><name>tas_spins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
		<comment type="block">/*
		 * Spin 50 times per processor, we have anecdotal evidence that this
		 * is a reasonable value.
		 */</comment>
		<if>if <condition>(<expr><name>tas_spins</name> != 1</expr>)</condition><then>
			<expr_stmt><expr><name>tas_spins</name> *= 50</expr>;</expr_stmt></then></if>
	
		<return>return <expr>(<name>tas_spins</name>)</expr>;</return>
	}</block></function>
	

	<function>	<type><name>void</name></type> <name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction13</name><parameterlist>()</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function><type><name>static</name> <name>void</name></type> <name>os_yield</name><parameter_list>(<param><decl><type><name>DB_ENV</name> *</type><name>dbenv</name></decl></param>, <param><decl><type><name>u_long</name></type> <name>usecs</name></decl></param>)</parameter_list>
	<block>{
		<if>if <condition>(<expr><call><name>DB_GLOBAL</name><argument_list>(<argument><expr><name>j_yield</name></expr></argument>)</argument_list></call> != <name>NULL</name> &amp;&amp; <call><name>DB_GLOBAL</name><argument_list>(<argument><expr><name>j_yield</name></expr></argument>)</argument_list></call>() == 0</expr>)</condition><then>
			<return>return;</return></then></if>
<expr_stmt><expr><call><name>/work/joliebig/workspace_sple/cnife/test/BerkleyDB_OS/Base/OsSpinHookFunction13</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>COsSleep</name>::<name>os_sleep</name></name><argument_list>(<argument><expr><name>dbenv</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>usecs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>





	</public>}</block>;</class>


</unit>