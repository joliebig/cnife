<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" filename="LinkedList.h" language="C++"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Config.cpp"</cpp:file></cpp:include>

<class>class <name>Node</name> <block>{<private type="default">
</private><public>public:
	<decl_stmt><decl><type><name>int</name></type> <name>data</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Node</name> *</type><name>next</name></decl>;</decl_stmt>



</public>}</block>;</class>


<function>	<type><name>void</name></type> <name>/work/joliebig/workspace_sple/cnife/test/ugly/Base/LinkedListHookFunction1</name><parameterlist>(<param><decl><type><name>int</name>&amp;</type> <name>newData</name></decl></param>)</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function>	<type><name>void</name></type> <name>/work/joliebig/workspace_sple/cnife/test/ugly/Base/LinkedListHookFunction1</name><parameterlist>(<param><decl><type><name>int</name>&amp;</type> <name>newData</name></decl></param>)</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function><type><name>void</name></type> <name><name>LinkedList</name>::<name>insert</name></name><parameter_list>( <param><decl><type><name>int</name></type> <name>newData</name></decl></param> )</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>k</name> =<init> <expr>2</expr></init></decl>;</decl_stmt>
	
<expr_stmt><expr><call><name>/work/joliebig/workspace_sple/cnife/test/ugly/Base/LinkedListHookFunction1</name><argument_list>(<argument><expr><name>newData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>/work/joliebig/workspace_sple/cnife/test/ugly/Base/LinkedListHookFunction1</name><argument_list>(<argument><expr><name>newData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></function>

</unit>