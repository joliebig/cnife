<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" filename="Class.h" language="C++"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<using>using namespace <name>std</name>;</using>

<class>class <name>Class</name> <block>{<private type="default">
</private><public>public:
	<constructor_decl><name>Class</name><parameter_list>()</parameter_list>;</constructor_decl>
	<destructor_decl><name>~<name>Class</name></name><parameter_list>()</parameter_list>;</destructor_decl>
<function_decl><type><name>void</name></type> <name>print1</name><parameter_list>()</parameter_list>;</function_decl>
	<function_decl><type><name>void</name></type> <name>print2</name><parameter_list>()</parameter_list>;</function_decl>


	</public>}</block>;</class>

<function>	<type><name>void</name></type> <name>/opt/joliebig/workspace/cnife/test/clone/Base/ClassHookFunction1</name><parameterlist>(<param><decl><type><name>int</name>&amp;</type> <name>k</name></decl></param>)</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function><type><name>void</name></type> <name><name>Class</name>::<name>print1</name></name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>k</name> =<init> <expr>10</expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>/opt/joliebig/workspace/cnife/test/clone/Base/ClassHookFunction1</name><argument_list>(<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function>	<type><name>void</name></type> <name>/opt/joliebig/workspace/cnife/test/clone/Base/ClassHookFunction1</name><parameterlist>()</parameterlist>
	<block>{
	<comment>//--functionbody</comment>
	}</block></function><function><type><name>void</name></type> <name><name>Class</name>::<name>print2</name></name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>k</name> =<init> <expr>3</expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>/opt/joliebig/workspace/cnife/test/clone/Base/ClassHookFunction1</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>