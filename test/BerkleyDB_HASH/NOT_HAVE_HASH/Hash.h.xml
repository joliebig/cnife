<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" dir="" filename="vorlage.h" language="C++">
<comment>//---refactored defines</comment>
<class>refines class <name>CHash</name>
<block>{
<comment>//---refactored functions</comment><public>
public:



	<function><type><name>static</name> <name>int</name></type> <name>ham_quick_delete</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>
	<block>{
		<return>return <expr>(<call><name>db_no_hash_am</name><argument_list>(<argument><expr><name>dbc</name>-&gt;<name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>


	<function><type><name>static</name> <name>int</name></type> <name>ham_c_count</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>db_recno_t</name> *</type><name>recnop</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>recnop</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<return>return <expr>(<call><name>db_no_hash_am</name><argument_list>(<argument><expr><name>dbc</name>-&gt;<name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>

	<function><type><name>static</name> <name>int</name></type> <name>ham_c_dup</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>orig_dbc</name></decl></param>, <param><decl><type><name>DBC</name> *</type><name>new_dbc</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>new_dbc</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<return>return <expr>(<call><name>db_no_hash_am</name><argument_list>(<argument><expr><name>orig_dbc</name>-&gt;<name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>


	<function><type><name>static</name> <name>int</name></type> <name>ham_c_init</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>
	<block>{
		<return>return <expr>(<call><name>db_no_hash_am</name><argument_list>(<argument><expr><name>dbc</name>-&gt;<name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>

	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_close</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>root_pgno</name></decl></param>, <param><decl><type><name>int</name> *</type><name>rmroot</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_destroy</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_del</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_get</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>key</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>data</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>, <param><decl><type><name>db_pgno_t</name> *</type><name>pgnop</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_bulk</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>data</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_put</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>key</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>data</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>, <param><decl><type><name>db_pgno_t</name> *</type><name>pgnop</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_expand_table</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>u_int32_t</name></type> <name>ham_call_hash</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>u_int8_t</name> *</type><name>k</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_dup_return</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>val</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_overwrite</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>nval</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_lookup</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>const</name> <name>DBT</name> *</type><name>key</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>sought</name></decl></param>, <param><decl><type><name>db_lockmode_t</name></type> <name>mode</name></decl></param>, <param><decl><type><name>db_pgno_t</name> *</type><name>pgnop</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_init_dbt</name><parameter_list>(<param><decl><type><name>DB_ENV</name> *</type><name>dbenv</name></decl></param>, <param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>size</name></decl></param>, <param><decl><type><name>void</name> **</type><name>bufp</name></decl></param>, <param><decl><type><name>u_int32_t</name> *</type><name>sizep</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_update</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>len</name></decl></param>, <param><decl><type><name>int</name></type> <name>add</name></decl></param>, <param><decl><type><name>int</name></type> <name>is_dup</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_get_clist</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>pgno</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>indx</name></decl></param>, <param><decl><type><name>DBC</name> ***</type><name>listp</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_c_writelock</name><parameter_list>(<param><decl><type><name>DBC</name> *</type><name>dbc</name></decl></param>)</parameter_list>;</function_decl>

</public>
}</block></class>;</unit>