<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" dir="" filename="vorlage.h" language="C++">
<comment>//---refactored defines</comment>
<class>refines class <name>CHashVerify</name>
<block>{
<comment>//---refactored functions</comment><public>
public:

	<function><type><name>static</name> <name>int</name></type> <name>ham_vrfy_meta</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>HMETA</name> *</type><name>m</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>pgno</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>vdp</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>m</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>pgno</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>
	<function><type><name>static</name> <name>int</name></type> <name>ham_vrfy</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>PAGE</name> *</type><name>h</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>pgno</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>vdp</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>h</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>pgno</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_vrfy_item</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>pgno</name></decl></param>, <param><decl><type><name>PAGE</name> *</type><name>h</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>i</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name>static</name> <name>int</name></type> <name>ham_vrfy_structure</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>db_pgno_t</name></type> <name>meta_pgno</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>vdp</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>meta_pgno</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>
	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_vrfy_bucket</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>HMETA</name> *</type><name>m</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>bucket</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name>static</name> <name>int</name></type> <name>ham_vrfy_hashing</name><argument_list>(<argument><expr><name>DB</name> *<name>dbp</name></expr></argument>, <argument><expr><name>u_int32_t</name> <name>nentries</name></expr></argument>, <argument><expr><name>HMETA</name> *<name>m</name></expr></argument>, <argument><expr><name>u_int32_t</name> <name>thisbucket</name></expr></argument>, <argument><expr><name>db_pgno_t</name> <name>pgno</name></expr></argument>, <argument><expr><name>u_int32_t</name> <name>flags</name></expr></argument>, <argument><expr><call><name>u_int32_t</name> <argument_list>(<argument><expr>*<name>hfunc</name></expr></argument>)</argument_list></call> <call><name>__P</name><argument_list>(<argument><expr>(<name>DB</name> *, <name>const</name> <name>void</name> *, <name>u_int32_t</name>)</expr></argument>)</argument_list></call></expr></argument>)</argument_list>
	<block>{
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>nentries</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>m</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>thisbucket</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>pgno</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>hfunc</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></decl></decl_stmt>
	<decl_stmt><decl><type><name>static</name> <name>int</name></type> <name>ham_salvage</name><argument_list>(<argument><expr><name>DB</name> *<name>dbp</name></expr></argument>, <argument><expr><name>VRFY_DBINFO</name> *<name>vdp</name></expr></argument>, <argument><expr><name>db_pgno_t</name> <name>pgno</name></expr></argument>, <argument><expr><name>PAGE</name> *<name>h</name></expr></argument>, <argument><expr><name>void</name> *<name>handle</name></expr></argument>, <argument><expr><call><name>int</name> <argument_list>(<argument><expr>*<name>callback</name></expr></argument>)</argument_list></call> <call><name>__P</name><argument_list>(<argument><expr>(<name>void</name> *, <name>const</name> <name>void</name> *)</expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>u_int32_t</name> <name>flags</name></expr></argument>)</argument_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>vdp</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>pgno</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>h</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>handle</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>callback</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></decl></decl_stmt>
	<function><type><name>static</name> <name>int</name></type> <name>ham_meta2pgset</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>VRFY_DBINFO</name> *</type><name>vdp</name></decl></param>, <param><decl><type><name>HMETA</name> *</type><name>hmeta</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>flags</name></decl></param>, <param><decl><type><name>DB</name> *</type><name>pgset</name></decl></param>)</parameter_list>
	<block>{
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>vdp</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>hmeta</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<expr_stmt><expr><call><name>COMPQUIET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<constructor_decl><name>COMPQUIET</name><parameter_list>(<param><decl><type><name>pgset</name></type></decl></param>, <param><decl><type><name>NULL</name></type></decl></param>)</parameter_list>;</constructor_decl>
		<return>return <expr>(<call><name><name>CHash</name>::<name>db_no_hash_am</name></name><argument_list>(<argument><expr><name>dbp</name>-&gt;<name>dbenv</name></expr></argument>)</argument_list></call>)</expr>;</return>
	}</block></function>

	<function_decl><type><name>static</name> <name>int</name></type> <name>ham_dups_unsorted</name><parameter_list>(<param><decl><type><name>DB</name> *</type><name>dbp</name></decl></param>, <param><decl><type><name>u_int8_t</name> *</type><name>buf</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>

</public>
}</block></class>;</unit>