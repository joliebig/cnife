<?xml version="1.0" encoding="UTF-8"?><unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" dir="" filename="HashStat.h" language="C++"><comment type="block">/*-
* See the file LICENSE for redistribution information.
*
* Copyright (c) 1996-2005
*	Sleepycat Software.  All rights reserved.
*
*/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_config.h"</cpp:file></cpp:include>



<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_int.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_page.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db_shash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"BtreeMacros.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"HashStat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"HashMeta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"HashPage.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"MpFget.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"MpFput.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbMethod.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbPr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"EnvStat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbCam.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbReclaim.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"BTreeStatistic.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"BTreeTraverse.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbErr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DbLog2.h"</cpp:file></cpp:include>


<comment type="block">/* Hash statistics structure. */</comment>
<struct>struct <name>__db_h_stat</name> <block>{<public type="default">
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_magic</name></decl>;</decl_stmt>		<comment type="block">/* Magic number. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_version</name></decl>;</decl_stmt>		<comment type="block">/* Version number. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_metaflags</name></decl>;</decl_stmt>	<comment type="block">/* Metadata flags. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_nkeys</name></decl>;</decl_stmt>		<comment type="block">/* Number of unique keys. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_ndata</name></decl>;</decl_stmt>		<comment type="block">/* Number of data items. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_pagesize</name></decl>;</decl_stmt>	<comment type="block">/* Page size. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_ffactor</name></decl>;</decl_stmt>		<comment type="block">/* Fill factor specified at create. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_buckets</name></decl>;</decl_stmt>		<comment type="block">/* Number of hash buckets. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_free</name></decl>;</decl_stmt>		<comment type="block">/* Pages on the free list. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_bfree</name></decl>;</decl_stmt>		<comment type="block">/* Bytes free on bucket pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_bigpages</name></decl>;</decl_stmt>	<comment type="block">/* Number of big key/data pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_big_bfree</name></decl>;</decl_stmt>	<comment type="block">/* Bytes free on big item pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_overflows</name></decl>;</decl_stmt>	<comment type="block">/* Number of overflow pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_ovfl_free</name></decl>;</decl_stmt>	<comment type="block">/* Bytes free on ovfl pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_dup</name></decl>;</decl_stmt>		<comment type="block">/* Number of dup pages. */</comment>
	<decl_stmt><decl><type><name>u_int32_t</name></type> <name>hash_dup_free</name></decl>;</decl_stmt>	<comment type="block">/* Bytes free on duplicate pages. */</comment>
</public>}</block>;</struct>


<class>class <name>CHashStat</name>
<block>{<private type="default">
</private><public>public:
<comment type="line">//#ifndef HAVE_HASH #else</comment>

		</public>}</block>;</class>



</unit>